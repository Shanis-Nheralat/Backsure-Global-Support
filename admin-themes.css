/**
 * JavaScript for theme selection
 * Handles theme switching and persistence
 */

document.addEventListener('DOMContentLoaded', function() {
    // Theme selector
    const themeSelector = document.getElementById('theme-selector');
    const autoDarkMode = document.getElementById('auto-dark-mode');
    
    // Load saved theme
    const savedTheme = localStorage.getItem('admin_theme');
    const autoDarkEnabled = localStorage.getItem('admin_auto_dark') === 'true';
    
    // Set initial theme
    if (autoDarkEnabled) {
        autoDarkMode.checked = true;
        applyAutoDarkMode();
    } else if (savedTheme) {
        setTheme(savedTheme);
        if (themeSelector) {
            themeSelector.value = savedTheme;
        }
    }
    
    // Theme selector change event
    if (themeSelector) {
        themeSelector.addEventListener('change', function() {
            const selectedTheme = this.value;
            setTheme(selectedTheme);
            localStorage.setItem('admin_theme', selectedTheme);
            
            // Disable auto dark mode when manually changing theme
            if (autoDarkMode && autoDarkMode.checked) {
                autoDarkMode.checked = false;
                localStorage.setItem('admin_auto_dark', 'false');
            }
        });
    }
    
    // Auto dark mode toggle
    if (autoDarkMode) {
        autoDarkMode.addEventListener('change', function() {
            if (this.checked) {
                localStorage.setItem('admin_auto_dark', 'true');
                applyAutoDarkMode();
            } else {
                localStorage.setItem('admin_auto_dark', 'false');
                
                // Restore saved theme or default
                const savedTheme = localStorage.getItem('admin_theme') || 'default';
                setTheme(savedTheme);
                if (themeSelector) {
                    themeSelector.value = savedTheme;
                }
            }
        });
        
        // Listen for system preference changes
        if (window.matchMedia) {
            const darkModeMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');
            
            // Add change listener
            try {
                // Chrome & Firefox
                darkModeMediaQuery.addEventListener('change', function(e) {
                    if (autoDarkMode.checked) {
                        applyAutoDarkMode();
                    }
                });
            } catch (error) {
                try {
                    // Safari
                    darkModeMediaQuery.addListener(function(e) {
                        if (autoDarkMode.checked) {
                            applyAutoDarkMode();
                        }
                    });
                } catch (error2) {
                    console.error('Error setting up dark mode listener:', error2);
                }
            }
        }
    }
    
    // Handle notifications auto-dismiss
    const notifications = document.querySelectorAll('.notification');
    notifications.forEach(notification => {
        const closeButton = notification.querySelector('.notification-close');
        if (closeButton) {
            closeButton.addEventListener('click', function() {
                notification.classList.add('fade-out');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            });
        }
        
        // Auto-dismiss based on timeout
        const timeout = notification.dataset.timeout;
        if (timeout && !isNaN(parseInt(timeout))) {
            setTimeout(() => {
                notification.classList.add('fade-out');
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, parseInt(timeout));
        }
    });
});

/**
 * Apply theme to document
 * 
 * @param {string} theme Theme name
 */
function setTheme(theme) {
    document.documentElement.setAttribute('data-theme', theme);
}

/**
 * Apply theme based on system preference
 */
function applyAutoDarkMode() {
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
        setTheme('dark');
        const themeSelector = document.getElementById('theme-selector');
        if (themeSelector) {
            themeSelector.value = 'dark';
        }
    } else {
        setTheme('default');
        const themeSelector = document.getElementById('theme-selector');
        if (themeSelector) {
            themeSelector.value = 'default';
        }
    }
}
